"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./Context/SwapContext.js":
/*!********************************!*\
  !*** ./Context/SwapContext.js ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SwapTokenContext\": function() { return /* binding */ SwapTokenContext; },\n/* harmony export */   \"SwapTokenContextProvider\": function() { return /* binding */ SwapTokenContextProvider; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3modal */ \"./node_modules/web3modal/dist/index.js\");\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(web3modal__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @uniswap/sdk-core */ \"./node_modules/@uniswap/sdk-core/dist/sdk-core.esm.js\");\n/* harmony import */ var _Utils_appFeatures__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Utils/appFeatures */ \"./Utils/appFeatures.js\");\n/* harmony import */ var _Utils_fetchingPrice__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Utils/fetchingPrice */ \"./Utils/fetchingPrice.js\");\n/* harmony import */ var _Utils_swapUpdatePrice__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Utils/swapUpdatePrice */ \"./Utils/swapUpdatePrice.js\");\n/* harmony import */ var _Utils_addLiquidity__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Utils/addLiquidity */ \"./Utils/addLiquidity.js\");\n/* harmony import */ var _Utils_checkLiquidity__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../Utils/checkLiquidity */ \"./Utils/checkLiquidity.js\");\n/* harmony import */ var _Utils_deployPool__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../Utils/deployPool */ \"./Utils/deployPool.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./constants */ \"./Context/constants.js\");\n/* harmony import */ var _ERC20_json__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./ERC20.json */ \"./Context/ERC20.json\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n//  INTERNAL IMPORT\n\n\n\n\n\n\n\n\nconst SwapTokenContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createContext();\nconst SwapTokenContextProvider = (param)=>{\n    let { children  } = param;\n    _s();\n    ///  USESTATE\n    const [account, setAccount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [ether, setEther] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [networkConnect, setNetworkConnect] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [weth9, setWeth9] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [dai, setDai] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [tokenData, setTokenData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [getAllLiquidity, setGetAllLiquidity] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const addToken = [\n        \"0x0165878A594ca255338adfa4d48449f69242Eb8F\",\n        \"0xa513E6E4b8f2a923D98304ec87F64353C4D5C853\",\n        \"0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6\"\n    ];\n    // FETCH DATA\n    const fetchingData = async ()=>{\n        try {\n            //GET USER ACCOUNT\n            const userAccount = await (0,_Utils_appFeatures__WEBPACK_IMPORTED_MODULE_4__.checkIfWalletConnected)();\n            setAccount(userAccount);\n            //CREATE PROVIDER\n            const web3modal = new (web3modal__WEBPACK_IMPORTED_MODULE_2___default())();\n            const connection = await web3modal.connect();\n            const provider = new ethers__WEBPACK_IMPORTED_MODULE_12__.ethers.providers.Web3Provider(connection);\n            // CHECK Balance\n            const balance = await provider.getBalance(userAccount);\n            const convertBal = ethers__WEBPACK_IMPORTED_MODULE_12__.BigNumber.from(balance).toString();\n            const ethValue = ethers__WEBPACK_IMPORTED_MODULE_12__.ethers.utils.formatEther(convertBal);\n            setEther(ethValue);\n            // GET NETWORK\n            const network = await provider.getNetwork();\n            //console.log(network);\n            setNetworkConnect(network.name);\n            //All TOKEN BALANCE AND DATA\n            addToken.map(async (el, i)=>{\n                //GETTING CONTRACT\n                const contract = new ethers__WEBPACK_IMPORTED_MODULE_12__.ethers.Contract(el, _ERC20_json__WEBPACK_IMPORTED_MODULE_11__, provider);\n                //GETTING BALANCE OF TOKEN\n                const userBalance = await contract.balanceOf(userAccount);\n                const tokenLeft = ethers__WEBPACK_IMPORTED_MODULE_12__.BigNumber.from(userBalance).toString();\n                const convertTokenBal = ethers__WEBPACK_IMPORTED_MODULE_12__.ethers.utils.formatEther(tokenLeft);\n                // GET NAME AND SYMBOL\n                const symbol = await contract.symbol();\n                const name = await contract.name();\n                // console.log(name)\n                tokenData.push({\n                    name: name,\n                    symbol: symbol,\n                    tokenBalance: convertTokenBal,\n                    tokenAddress: el\n                });\n            });\n            // GET LIQUIDITY\n            const userStorageData = await (0,_Utils_appFeatures__WEBPACK_IMPORTED_MODULE_4__.connectingWithUserStorageContract)();\n            const userLiquidity = await userStorageData.addToBlockchain(poolAddress, tokenAddress0, tokenAddress1);\n            console.log(userLiquidity);\n        //  const userLiquidity = await userStorageData.getAllTransactions();\n        // userLiquidity.map(async (el, i) => {\n        //     const liquidityData = await getLiqudityData(\n        //         el.poolAddress,\n        //         el.tokenAddress0,\n        //         el.tokenAddress1\n        //     );\n        //     getAllLiquidity.push(liquidityData);\n        //     console.log(liquidityData);\n        // });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        fetchingData();\n    }, []);\n    // CREATE AND ADD LIQUIDITY\n    const createLiquidityAndPool = async (param)=>{\n        let { tokenAddress0: tokenAddress01 , tokenAddress1: tokenAddress11 , fee , tokenPrice1 , tokenPrice2 , slippage , deadline , tokenAmountOne , tokenAmountTwo  } = param;\n        try {\n            console.log(tokenAddress01, tokenAddress11, fee, tokenPrice1, tokenPrice2, slippage, deadline, tokenAmountOne, tokenAmountTwo);\n            //CREATE POOL\n            const createPool = await (0,_Utils_deployPool__WEBPACK_IMPORTED_MODULE_9__.connectingWithPoolContract)(tokenAddress01, tokenAddress11, fee, tokenPrice1, tokenPrice2, {\n                gasLimit: 500000\n            });\n            const poolAddress1 = createPool;\n            // CREATE LIQUIDITY\n            const info = await (0,_Utils_addLiquidity__WEBPACK_IMPORTED_MODULE_7__.addLiquidityExternal)(tokenAddress01, tokenAddress11, poolAddress1, fee, tokenAmountOne, tokenAmountTwo);\n            console.log(info);\n            /// ADD DATA\n            const userStorageData = (0,_Utils_appFeatures__WEBPACK_IMPORTED_MODULE_4__.connectingWithUserStorageContract)();\n            const userLiquidity = await userStorageData.addToBlockchain(poolAddress1, tokenAddress01, tokenAddress11);\n            console.log(userLiquidity);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    // Single Swap Token\n    const singleSwapToken = async (param)=>{\n        let { token1 , token2 , swapAmount  } = param;\n        console.log(token1.tokenAddress.tokenAddress, token2.tokenAddress.tokenAddress, swapAmount);\n        try {\n            let singleSwapToken;\n            let weth;\n            let dai;\n            singleSwapToken = await (0,_Utils_appFeatures__WEBPACK_IMPORTED_MODULE_4__.connectingWithSingleSwapToken)();\n            weth = await (0,_Utils_appFeatures__WEBPACK_IMPORTED_MODULE_4__.connectingWithIWETHToken)();\n            dai = await (0,_Utils_appFeatures__WEBPACK_IMPORTED_MODULE_4__.connectingWithDAIToken)();\n            const decimals0 = 18;\n            const inputAmount = swapAmount;\n            const amountIn = ethers__WEBPACK_IMPORTED_MODULE_12__.ethers.utils.parseUnits(inputAmount.toString(), decimals0);\n            console.log(amountIn);\n            await weth.deposit({\n                value: amountIn\n            });\n            await weth.approve(singleSwapToken.address, amountIn);\n            // SWAP\n            const transaction = await singleSwapToken.swapExactInputSingle(token1.tokenAddress.tokenAddress, token2.tokenAddress.tokenAddress, swapAmount, {\n                gasLimit: 300000\n            });\n            await transaction.wait();\n            console.log(transaction);\n            const balance = await dai.balanceOf(account);\n            const transferAmount = ethers__WEBPACK_IMPORTED_MODULE_12__.BigNumber.from(balance).toString();\n            const ethValue = ethers__WEBPACK_IMPORTED_MODULE_12__.ethers.utils.formatEther(transferAmount);\n            setDai(ethValue);\n            console.log(\" DAI balance :  \", ethValue);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    ///\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(SwapTokenContext.Provider, {\n        value: {\n            singleSwapToken,\n            tokenData,\n            connectWallet: _Utils_appFeatures__WEBPACK_IMPORTED_MODULE_4__.connectWallet,\n            account,\n            weth9,\n            dai,\n            networkConnect,\n            ether,\n            getPrice: _Utils_fetchingPrice__WEBPACK_IMPORTED_MODULE_5__.getPrice,\n            getAllLiquidity,\n            swapUpdatePrice: _Utils_swapUpdatePrice__WEBPACK_IMPORTED_MODULE_6__.swapUpdatePrice,\n            createLiquidityAndPool\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\Levis\\\\Desktop\\\\KRUNAL2\\\\ALL YOUTUBE TUTORIAL\\\\UniSwap-Clone-Starter-File\\\\Context\\\\SwapContext.js\",\n        lineNumber: 241,\n        columnNumber: 9\n    }, undefined);\n};\n_s(SwapTokenContextProvider, \"RKl+6XCVLx/R0ogvR3Qi5RJ05bU=\");\n_c = SwapTokenContextProvider;\nvar _c;\n$RefreshReg$(_c, \"SwapTokenContextProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./Context/SwapContext.js\n"));

/***/ })

});